#summary How to use twitcurl library?
#labels Featured,Phase-Implementation

= How to use twitcurl library? =
twitcurl is an open-source pure C++ library for twitter REST APIs. Currently, it has support for most of the twitter APIs and it will be updated to support all the APIs. twitcurl uses cURL library for handling HTTP requests and responses. Building applications using twitcurl is quite easy:
  * Download twitcurl library source. Build library by using Visual C++ workspace or Makefile depending on your platform.

  * Include twitcurl.h and cURL headers (present in /include/curl/ directory in cURL source)in your twitter application and link to twitcurl.lib and libcurl.lib/libcurl.dll.

  * Instantiate an object of twitCurl class and use the twitter API wrappers that are exposed as public methods.

  * twitcurl works on all OS (Windows, Linux, Mac etc.) as it is written completely in C++ and the only dependency is cURL (which works on all OSes mentioned earlier).

=OAuth Flow:=
Refer this wiki page for OAuth flow:
http://code.google.com/p/twitcurl/wiki/TwitcurlOAuthFlow


=UNIX/Linux:=
A separate branch (libtwitcurl) of twitCurl library exists for UNIX/Linux distributions. Follow these steps to build library:
  * Make sure you have g++ and dependent packages. If you don't have g++, then install it using package manager. For example, in Ubuntu this is done as follows:
{{{sudo apt-get install g++}}}
  * Install libcurl development package using package manager. For example, in Ubuntu this is done as follows:
{{{sudo apt-get install libcurl4-dev}}}

  * Install SVN client. Again, in Ubuntu this is done as follows:
{{{sudo apt-get install subversion}}}
  * Check-out libtwitcurl using this command:
{{{svn co http://twitcurl.googlecode.com/svn/branches/libtwitcurl}}}
  * Build twitcurl library using the command {{{make}}}.

  * Copy {{{twitcurl.h}}} and {{{oauthlib.h}}} to either your application's directory or to a common directory like {{{/usr/local/include/}}} or {{{/usr/include/}}}.

  * Copy {{{libtwitcurl.so.1.0}}} to a suitable directory like {{{/usr/local/lib/}}} or {{{/usr/lib}}}. Also, create a symlink with names {{{libtwitcurl.so.1}}} and {{{libtwitcurl.so}}} in the same directory where {{{libtwitcurl.so.1.0}}} is copied.

  * Link your application with twitcurl library (*{{{-ltwitcurl}}}*). For example:
{{{g++ -ltwitcurl yourapp.cpp}}}

 * To run your application, make sure that {{{LD_LIBRARY_PATH}}} environment variable contains the directory path where {{{libtwitcurl.so.1}}} is present.  If directory path is not present in {{{LD_LIBRARY_PATH}}}, then add it using command {{{export}}} command. For example:
{{{export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib}}}



=Windows:=
The {{{twitCurl.lib}}} library present in "Download" section is built using Visual C++ 6.0. If you are using a newer version of Visual C++, then you may encounter linker errors (as mentioned here: http://code.google.com/p/twitcurl/issues/detail?id=4 ) when you try to link your application with {{{twitCurl.lib}}} that is built using older version of Visual C++. Follow these steps to freshly build twitcurl library:
  * Download twitCurl source from {{{http://twitcurl.googlecode.com/svn/trunk}}} using SVN clients like TortoiseSVN.

  * Open the workspace file {{{twitcurl.dsw}}} in your Visual C++ IDE and build the library. This dsw file is created using Visual C++ 6.0. If you are using a newer Visual C++, then it will prompt you to "migrate" the project to newer version.

  * Once {{{twitcurl.lib}}} is built, you can link this library with your application. Do not forget to include twitCurl and cURL headers in your application, as mentioned in {{{How to use twitcurl library?}}} section above.

Note: Currently Microsoft Visual C++ 6.0 workspace ({{{twitcurl.dsw}}}) file is provided with the twitcurl source. This workspace can be used to compile and build twitcurl on Windows using Visual C++ (6.0 or later). If you are using any other Windows based C++ IDE, then you can create new "workspace" or "project" in your IDE and just add twitCurl source files to this new "project".